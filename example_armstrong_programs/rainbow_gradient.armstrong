#AS

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This program uses the screen coordinates to draw a rainbow square. Red = X, Green = Y, and Blue = (108-(X+Y))/3 //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

change $memoryOffset = 53871

change $redMultiplier = 1024
change $greenMultiplier = 32
change $xPos = 0
change $yPos = 0
change $xActual = 0
change $yActual = 0

change $color = 0

change $yWait = 0
change $xWait = 0


#MainLoop
// Calculate color
    // Red
mult $xPos,$redMultiplier -> $r
    // Green
mult $yPos,$greenMultiplier -> $g
    // Blue
add $xPos,$yPos -> $b
sub 108,$b -> $b
div $b,6 -> $b
// Add together RGB
add $r,$g -> $color
add $b,$color -> $color

// Calculate memory address from coordinates
mult $yActual,108 -> $actualAddress // Calculate Y position
add $xActual,$actualAddress -> $actualAddress // Calculate X position
add $memoryOffset,$actualAddress -> $actualAddress // Add offset

// Store color
// change @B = $color
// change @A = $actualAddress
// asm"
// bnk 1
// staout
// bnk 0
// "
change *[1]$actualAddress = $color

// Increment Coordinates
add $xActual,1 -> $xActual
// If the X position is at the end, increment Y by 1
if $xActual==108:
    change $xActual = 0
    add $yActual,1 -> $yActual

    // If the Y position is at the bottom, stop executing
    if $yActual==108:
        goto #EndExecution
    endif
endif

div $xActual,3 -> $xPos
div $yActual,3 -> $yPos

presentvbuff

goto #MainLoop


// End loop
#EndExecution
goto #EndExecution